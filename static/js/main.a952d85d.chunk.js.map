{"version":3,"sources":["const/Vars.ts","components/general/Button/Button.tsx","components/general/Button/index.tsx","hoc/withAuthRedirect.tsx","components/AppHeader/logo.svg","store/selectors/auth.ts","components/Form/InputField.tsx","utils/set-auth-token.ts","store/actions/auth.ts","components/AppHeader/index.ts","components/AppHeader/AppHeader.tsx","components/Auth/Login/LoginForm.tsx","components/Auth/Login/Login.tsx","store/selectors/generator.ts","components/Pages/Generator/GeneratorResult.tsx","components/Pages/Generator/GeneratorContainer.tsx","store/actions/generator.ts","components/Pages/Playdays/Edit/PlaydayAddPlayer.tsx","components/Pages/Playdays/Edit/PlaydayEditForm.tsx","components/Pages/Playdays/Edit/PlaydayTitle.tsx","components/Pages/Playdays/Edit/PlaydayEditContainer.tsx","hoc/withSuspense.tsx","components/App/App.tsx","components/App/index.ts","store/reducers/authReducer.ts","store/reducers/generatorReducer.ts","store/reducers/playdayReducer.ts","store/reducers/playerReducer.ts","store/store.ts","index.tsx","components/Spinner/Spinner.tsx","components/Spinner/index.ts","store/actions/player.ts","store/selectors/player.ts","const/Routes.ts","components/Error/Error.tsx","components/Error/index.ts","api/api.ts","store/selectors/playday.ts","components/Team/Team.tsx","components/Team/index.tsx","store/actions/playday.ts","utils/newTeams.ts","components/Spinner/Spinner.module.css"],"names":["DEFAULT_PLAYER_IMAGE","TXT_SITENAME","TXT_GENERATOR","TXT_GENERATOR_GET_TEAMS","TXT_RESULTS","TXT_PLAYERS","TXT_ADD_PLAYER","TXT_LOGIN","TXT_LOGOUT","TXT_SAVE","TXT_DELETE","TXT_EDIT","TXT_ADD","TXT_SELECT","TXT_GOALS","TXT_WIN","TXT_LOSS","TXT_RESET","TXT_PAGE_LOGIN","TXT_PAGE_GENERATOR","TXT_PAGE_PLAYERS","TXT_PAGE_ADD_PLAYER","TXT_PAGE_EDIT_PLAYER","TXT_FIELD_REQUIRED","TXT_FIELD_EMAIL_INVALID","TXT_LABEL_EMAIL","TXT_LABEL_PASSWORD","TXT_LABEL_NAME","TXT_LABEL_LOGIN","TXT_LABEL_BOX","TXT_LABEL_BOX_1","TXT_LABEL_BOX_2","TXT_LABEL_BOX_3","TXT_LABEL_DAMAGE","TXT_LABEL_IMAGE","Button","type","mod","title","href","wide","className","onClick","props","TAG","cn","children","defaultProps","withAuthRedirect","Component","RedirectComponent","this","auth","isAuth","to","React","connect","state","getAuthReselect","module","exports","createSelector","Input","name","handleChange","values","handleBlur","touched","errors","placeholder","autoFocus","autoComplete","onChange","value","onBlur","cnames","Checkbox","label","id","checked","htmlFor","Select","InputField","renderInput","rest","setAuthToken","token","axios","defaults","headers","common","Authorization","userLoaded","userData","logoutUser","dispatch","localStorage","removeItem","AppHeader","actions","links","access","link","ROUTE_GENERATOR","ROUTE_PLAYDAYS","ROUTE_PLAYERS","ROUTE_NEW_PLAYER","ROUTE_LOGIN","action","ROUTE_HOME","guestLinks","filter","el","map","idx","key","authLinks","navLinks","useState","showNavBar","setNavbarVisible","src","logo","alt","height","show","memo","onSubmit","loginFormOptions","useFormik","initialValues","email","password","validationSchema","Yup","shape","required","handleSubmit","loginUser","a","authAPI","login","res","data","setItem","jwtDecode","error","response","message","loading","Spinner","Error","formData","getSelectedPlayersReselect","generator","selected","getGeneratorResultReselect","result","getGeneratorErrors","onSaveResult","length","results","team","Object","keys","Team","players","color","mapDispatchToProps","generatorPlayerSelected","player","generatorPlayersReset","generatorRun","teams","generatorSaveResult","playdayAPI","addPlayday","getPlayers","playerActions","list","getPlayerListReselect","useEffect","playerList","_id","damage","selectedClass","find","pl","damageClass","onGenerateClick","playerToTeam","box1","box2","box3","min","max","random","startList","Math","floor","push","splice","resBox1","e","box","resBox2","resBox3","team1","team2","team3","PlaydayAddPlayer","options","defaultValue","current","res1","goals","res2","PlaydayTitle","showEditTitle","setEditTitle","onDoubleClick","getPlayday","getPlayer","playdayUpdateTeams","updatePlayday","compose","getPlaydayReselect","freePlayers","getPlayerFreeListReselect","match","params","history","currentId","onDeletePlayer","teamNumber","onAddPlayerToTeam","teamList","deletePlayerFromTeam","withSuspense","Suspense","fallback","PLAYERS_CONTAINER","lazy","PLAYER_VIEW","POST_PLAYER","PLAYDAYS_CONTAINER","App","path","component","Login","GeneratorContainer","exact","ROUTE_EDIT_PLAYDAY","PlaydayEditContainer","ROUTE_EDIT_PLAYER","from","authReducerDefaultState","user","authReducer","decoded","updateSelected","newSelected","existPlayer","findIndex","slice","generatorReducerDefaultState","generatorReducer","updateExistPlayday","newTeams","playdayReducerDefaultState","playdayReducer","playdays","playerReducerDefaultState","playerReducer","reducers","combineReducers","playday","store","createStore","applyMiddleware","thunk","jwtToken","JwtDecode","setCurrentUser","currentTime","Date","now","exp","window","location","ReactDOM","render","basename","process","document","getElementById","s","spinner","ldsCss","ldsDualRing","playerLoaded","playerPostSuccess","playerAPI","getPlayerList","playerId","console","postPlayer","image","addPlayer","updatePlayer","playerData","deletePlayer","getCurrentPlayer","getPlayerByHandle","handle","resetCurrentPlayer","newArr","keysSelectedFilter","i","includes","getPlayerLoadingReselect","getPlayerErrorReselect","getPlayerCurrentReselect","baseURL","post","get","put","delete","getPlaydays","getPlaydaysReselect","getPlaydaysLoadingReselect","view","teamData","width","playdayPostSuccess","playdayPlayerRemove","newPlayday","playdayData","newTeam","parseInt","exPlayer","existPlayerIdx"],"mappings":"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","file":"static/js/main.a952d85d.chunk.js","sourcesContent":["export const DEFAULT_PLAYER_IMAGE = 'https://fb.joomdesign.ru/images/def.png';\n\nconst TXT_SITENAME = 'Футбол в спортзале';\n\nconst TXT_GENERATOR = 'Генератор';\nconst TXT_GENERATOR_GET_TEAMS = 'Получить составы';\nconst TXT_RESULTS = 'Результаты';\nconst TXT_PLAYERS = 'Игроки';\nconst TXT_ADD_PLAYER = 'Добавить игрока';\n\nconst TXT_LOGIN = 'Войти';\nconst TXT_LOGOUT = 'Выйти';\nconst TXT_SAVE = 'Сохранить';\nconst TXT_DELETE = 'Удалить';\nconst TXT_EDIT = 'Редактировать';\nconst TXT_ADD = 'Добавить';\nconst TXT_SELECT = 'Выбрать';\nconst TXT_GOALS = 'Голы';\nconst TXT_WIN = 'Победа';\nconst TXT_LOSS = 'Поражение';\nconst TXT_RESET = 'Сбросить';\n\n// pages\nconst TXT_PAGE_LOGIN = 'Авторизация';\nconst TXT_PAGE_GENERATOR = 'Генератор команд';\nconst TXT_PAGE_PLAYERS = 'Игроки';\nconst TXT_PAGE_ADD_PLAYER = 'Добавить игрока';\nconst TXT_PAGE_EDIT_PLAYER = 'Редактировать игрока';\n\n// forms\nconst TXT_FIELD_REQUIRED = 'Обязательное поле';\nconst TXT_FIELD_EMAIL_INVALID = 'Эл.почта указана неверно';\nconst TXT_LABEL_EMAIL = 'Эл.почта';\nconst TXT_LABEL_PASSWORD = 'Пассворд';\nconst TXT_LABEL_NAME = 'Имя';\nconst TXT_LABEL_LOGIN = 'Логин';\nconst TXT_LABEL_BOX = 'Корзина';\nconst TXT_LABEL_BOX_1 = 'Первая';\nconst TXT_LABEL_BOX_2 = 'Вторая';\nconst TXT_LABEL_BOX_3 = 'Третья';\nconst TXT_LABEL_DAMAGE = 'Травма';\nconst TXT_LABEL_IMAGE = 'Изображение';\n\nexport {\n  TXT_SITENAME,\n  TXT_GENERATOR,\n  TXT_GENERATOR_GET_TEAMS,\n  TXT_RESULTS,\n  TXT_PLAYERS,\n  TXT_ADD_PLAYER,\n  TXT_LOGIN,\n  TXT_LOGOUT,\n  TXT_SAVE,\n  TXT_DELETE,\n  TXT_EDIT,\n  TXT_ADD,\n  TXT_SELECT,\n  TXT_GOALS,\n  TXT_WIN,\n  TXT_LOSS,\n  TXT_RESET,\n  TXT_PAGE_LOGIN,\n  TXT_PAGE_GENERATOR,\n  TXT_PAGE_PLAYERS,\n  TXT_PAGE_ADD_PLAYER,\n  TXT_PAGE_EDIT_PLAYER,\n  TXT_FIELD_REQUIRED,\n  TXT_FIELD_EMAIL_INVALID,\n  TXT_LABEL_EMAIL,\n  TXT_LABEL_PASSWORD,\n  TXT_LABEL_NAME,\n  TXT_LABEL_LOGIN,\n  TXT_LABEL_BOX,\n  TXT_LABEL_BOX_1,\n  TXT_LABEL_BOX_2,\n  TXT_LABEL_BOX_3,\n  TXT_LABEL_DAMAGE,\n  TXT_LABEL_IMAGE,\n};\n","import React from 'react';\n\nimport cn from 'classnames';\n\ninterface IProps {\n  type?: 'reset' | 'button' | 'submit';\n  mod?: 'primary' | 'outline-primary' | 'outline-info' | 'outline-danger';\n  className?: string;\n  href?: string;\n  wide?: boolean;\n  onClick?: () => void;\n  title?: string;\n  props?: any;\n}\n\nconst Button: React.FC<IProps> = (\n  {\n    type,\n    mod,\n    title,\n    href,\n    wide,\n    className,\n    onClick,\n    ...props\n  }) => {\n  const TAG = href ? 'a' : 'button';\n\n  return (\n    <TAG\n      href={href}\n      type={type}\n      onClick={onClick}\n      title={title}\n      className={cn('btn', mod && `btn-${mod}`, wide && 'w-100', className)}\n    >\n      {props.children}\n    </TAG>\n  );\n};\n\nButton.defaultProps = {\n  mod: 'primary',\n  type: 'button',\n};\n\nexport default Button;\n","import Button from './Button';\nexport default Button;\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { getAuthReselect } from 'store/selectors/auth';\nimport { AppState } from 'store/store';\n\nconst withAuthRedirect = (Component: any) => {\n  class RedirectComponent extends React.Component<{ auth: { isAuth: boolean } }> {\n\n    public render() {\n      const { isAuth } = this.props.auth;\n\n      if (!isAuth) {\n        return <Redirect to={'/login'}/>;\n      }\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  const mapStateToProps = (state: AppState) => ({\n    auth: getAuthReselect(state),\n  });\n\n  return connect(mapStateToProps, {})(RedirectComponent);\n};\n\nexport default withAuthRedirect;\n","module.exports = __webpack_public_path__ + \"static/media/logo.761182ff.svg\";","import { createSelector } from 'reselect';\nimport { AppState } from 'store/store';\n\nconst getAuth = (state: AppState) => {\n  return state.auth;\n};\n\nexport const getAuthReselect = createSelector(getAuth, auth => auth);\n","import React from 'react';\n\nimport cnames from 'classnames';\n\ninterface IProps {\n  name: string;\n  type?: 'password' | 'email' | 'checkbox' | 'select' | 'text';\n  handleBlur?: (e: any) => void;\n  handleChange?: (e: any) => void;\n  values?: any;\n  touched?: any;\n  errors?: any;\n  placeholder?: string;\n  label?: string;\n  autoFocus?: any;\n  autoComplete?: string;\n}\n\nconst Input: React.FC<IProps> = (\n  {\n    name,\n    handleChange,\n    values,\n    handleBlur,\n    type,\n    touched, errors,\n    placeholder,\n    autoFocus,\n    autoComplete = 'false',\n  }) => {\n  return (\n    <input\n      name={name}\n      onChange={handleChange}\n      value={values[name]}\n      onBlur={handleBlur}\n      type={type}\n      className={cnames('form-control', { 'is-invalid': touched[name] && errors[name] })}\n      placeholder={placeholder}\n      autoFocus={autoFocus}\n      autoComplete={autoComplete}\n    />\n  );\n};\n\nconst Checkbox: React.FC<IProps> = (\n  {\n    name,\n    handleChange,\n    values,\n    handleBlur,\n    type,\n    touched,\n    errors,\n    label,\n  }) => {\n  return (\n    <div className=\"custom-control custom-checkbox\">\n      <input\n        id={name}\n        name={name}\n        onChange={handleChange}\n        value={values[name]}\n        onBlur={handleBlur}\n        type={type}\n        /* tslint:disable-next-line:max-line-length */\n        className={cnames('custom-control-input', { 'is-invalid': touched[name] && errors[name] })}\n        checked={values[name]}\n      />\n      <label className=\"custom-control-label\" htmlFor={name}>{label}</label>\n    </div>\n  );\n};\n\nconst Select: React.FC<IProps> = (\n  {\n    name,\n    handleChange,\n    values,\n    handleBlur,\n    touched,\n    errors,\n    children,\n  }) => {\n  return (\n    <select\n      id={name}\n      name={name}\n      onChange={handleChange}\n      value={values[name]}\n      onBlur={handleBlur}\n      className={cnames('form-control ', { 'is-invalid': touched[name] && errors[name] })}\n    >\n      {children}\n    </select>\n  );\n};\n\nconst InputField: React.FC<IProps> = (props) => {\n  const { name, type = 'text', ...rest } = props;\n\n  let renderInput;\n\n  switch (type) {\n    case 'text':\n    case 'email':\n    case 'password': {\n      renderInput = <Input name={name} type={type} {...rest} />;\n      break;\n    }\n\n    case 'checkbox': {\n      renderInput = <Checkbox name={name} type=\"checkbox\" {...rest} />;\n      break;\n    }\n\n    case 'select': {\n      renderInput = <Select name={name} {...rest} />;\n      break;\n    }\n    default: {\n      renderInput = null;\n    }\n  }\n\n  const { touched, errors } = props;\n\n  return (\n    <div className={cnames('form-group', { 'has-danger': touched[name] && errors[name] })}>\n      {renderInput}\n      {touched[name] && errors[name] && <span className=\"invalid-feedback\">{errors[name]}</span>}\n    </div>\n  );\n};\n\nexport default InputField;\n","import axios from 'axios';\n\nconst setAuthToken = (token: string | null) => {\n  if (token) {\n    axios.defaults.headers.common.Authorization = token;\n  } else {\n    delete axios.defaults.headers.common.Authorization;\n  }\n};\n\nexport default setAuthToken;\n","import jwtDecode from 'jwt-decode';\nimport { Dispatch } from 'react';\n\nimport { authAPI } from 'api/api';\nimport { AppActions } from 'types';\nimport setAuthToken from 'utils/set-auth-token';\n\nimport ITokenJWT from 'types/interface/ITokenJWT';\n\nconst userRequested = (): AppActions => ({\n  type: 'AUTH_USER_REQUEST',\n});\n\nconst userLoaded = (userData: ITokenJWT): AppActions => ({\n  userData,\n  // tslint:disable-next-line:object-literal-sort-keys\n  type: 'AUTH_USER_SUCCESS',\n});\n\nconst userError = (error: string): AppActions => ({\n  error,\n  type: 'AUTH_USER_FAILURE',\n});\n\nconst userLogout = (): AppActions => ({\n  type: 'LOGOUT_USER',\n});\n\nexport const setCurrentUser = (decoded: ITokenJWT): AppActions => ({\n  decoded,\n  type: 'FETCH_USER_SUCCESS',\n});\n\nexport const loginUser = (\n  userData: { email: string, password: string },\n) => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(userRequested());\n\n  try {\n    const res = await authAPI.login(userData);\n    const { token } = res.data;\n\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    dispatch(userLoaded(jwtDecode(token)));\n  } catch (e) {\n    dispatch(userError(e.response.data.message));\n  }\n};\n\nexport const logoutUser = () => (dispatch: Dispatch<AppActions>) => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(null);\n  // dispatch(userLoaded(null));\n  dispatch(userLogout());\n};\n","import AppHeader from './AppHeader';\n\nexport default AppHeader;\n","import React, { useState } from 'react';\nimport * as actions from 'store/actions/auth';\n\nimport cnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { getAuthReselect } from 'store/selectors/auth';\nimport { AppState } from 'store/store';\n\nimport Button from 'components/general/Button';\nimport logo from './logo.svg';\n\nimport {\n  ROUTE_GENERATOR,\n  ROUTE_HOME,\n  ROUTE_LOGIN,\n  ROUTE_NEW_PLAYER,\n  ROUTE_PLAYDAYS,\n  ROUTE_PLAYERS,\n} from 'const/Routes';\nimport {\n  TXT_ADD_PLAYER,\n  TXT_GENERATOR,\n  TXT_LOGIN,\n  TXT_LOGOUT,\n  TXT_PLAYERS,\n  TXT_RESULTS,\n  TXT_SITENAME,\n} from 'const/Vars';\n\ninterface IProps {\n  auth: {\n    isAuth?: boolean;\n  };\n  logoutUser: () => void;\n}\n\nconst AppHeader: React.FC<IProps> = ({ auth: { isAuth }, logoutUser }) => {\n  const links = [\n    {\n      access: 'all', label: TXT_GENERATOR, link: ROUTE_GENERATOR,\n    },\n    {\n      access: 'all', label: TXT_RESULTS, link: ROUTE_PLAYDAYS,\n    },\n    {\n      access: 'all', label: TXT_PLAYERS, link: ROUTE_PLAYERS,\n    },\n    {\n      access: 'auth', label: TXT_ADD_PLAYER, link: ROUTE_NEW_PLAYER,\n    },\n    {\n      access: 'guest', label: TXT_LOGIN, link: ROUTE_LOGIN,\n    },\n    {\n      access: 'auth', action: () => logoutUser(), label: TXT_LOGOUT, link: ROUTE_HOME,\n    },\n  ];\n\n  const guestLinks = links\n    .filter(el => (el.access === 'guest' || el.access === 'all'))\n    .map((link: any, idx: number) => {\n      return (\n        <li className=\"nav-item\" key={idx}>\n          <NavLink to={link.link} className=\"nav-link\">{link.label}</NavLink>\n        </li>\n      );\n    });\n\n  const authLinks = links\n    .filter(el => (el.access === 'auth' || el.access === 'all'))\n    .map((link: any, idx: number) => {\n      return (\n        <li className=\"nav-item\" key={idx}>\n          <NavLink\n            to={link.link}\n            className=\"nav-link\"\n            onClick={link.action}\n          >{link.label}\n          </NavLink>\n        </li>\n      );\n    });\n\n  const navLinks = isAuth ? authLinks : guestLinks;\n\n  const [showNavBar, setNavbarVisible] = useState(false);\n  const onNavbarToggle = () => {\n    setNavbarVisible(!showNavBar);\n  };\n\n  return (\n    <div className=\"navbar navbar-expand-lg navbar-dark bg-primary mb-4\">\n      <div className=\"container\">\n        <div className=\"navbar-brand d-flex align-items-center\">\n          <img src={logo} alt=\"logo\" className=\"mr-2\" height=\"48\"/>\n          <span>{TXT_SITENAME}</span>\n        </div>\n\n        <Button className=\"navbar-toggler\" onClick={onNavbarToggle}>\n          <span className=\"navbar-toggler-icon\">&nbsp;</span>\n        </Button>\n\n        <div className={cnames('collapse navbar-collapse', { show: showNavBar })}>\n          <ul className=\"navbar-nav ml-md-auto\">\n            {navLinks}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  auth: getAuthReselect(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser: actions.logoutUser },\n)(AppHeader);\n","import React from 'react';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport InputField from 'components/Form/InputField';\nimport Button from 'components/general/Button';\n\nimport {\n  TXT_FIELD_EMAIL_INVALID,\n  TXT_FIELD_REQUIRED,\n  TXT_LABEL_EMAIL,\n  TXT_LABEL_PASSWORD,\n  TXT_LOGIN,\n} from 'const/Vars';\n\ninterface IProps {\n  onSubmit: (formData: { email: string, password: string }) => void;\n}\n\nconst LoginForm: React.FC<IProps> = ({ onSubmit }) => {\n  const loginFormOptions = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: (values) => {\n      onSubmit(values);\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(TXT_FIELD_EMAIL_INVALID).required(TXT_FIELD_REQUIRED),\n      password: Yup.string().required(TXT_FIELD_REQUIRED),\n    }),\n  });\n\n  const { handleSubmit, ...props } = loginFormOptions;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputField placeholder={TXT_LABEL_EMAIL} name=\"email\" type=\"email\" {...props} />\n      <InputField placeholder={TXT_LABEL_PASSWORD} name=\"password\" type=\"password\" {...props} />\n\n      <div className=\"mt-2\">\n        <Button wide={true} type=\"submit\">{TXT_LOGIN}</Button>\n      </div>\n    </form>\n  );\n};\n\nexport default React.memo(LoginForm);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from 'store/actions/auth';\nimport LoginForm from './LoginForm';\n\nimport { getAuthReselect } from 'store/selectors/auth';\nimport { AppState } from 'store/store';\n\nimport Error from 'components/Error';\nimport Spinner from 'components/Spinner';\n\nimport { TXT_PAGE_LOGIN } from 'const/Vars';\n\ninterface IProps {\n  auth: {\n    isAuth: boolean;\n    error?: string;\n    loading: boolean;\n  };\n  loginUser: (formData: { email: string, password: string }) => void;\n}\n\nconst Login: React.FC<IProps> = ({ loginUser, auth: { isAuth, error, loading } }) => {\n\n  const onSubmit = (formData: { email: string, password: string }) => {\n    loginUser(formData);\n  };\n\n  if (loading) {\n    return <Spinner/>;\n  }\n\n  if (isAuth) {\n    return <Redirect to=\"/\"/>;\n  }\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"col-md-6 m-auto\">\n        <h1>{TXT_PAGE_LOGIN}</h1>\n\n        <Error message={error}/>\n        <LoginForm onSubmit={onSubmit}/>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  auth: getAuthReselect(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser: actions.loginUser },\n)(React.memo(Login));\n","import { createSelector } from 'reselect';\nimport { AppState } from 'store/store';\n\nconst getSelectedPlayers = (state: AppState) => {\n  return state.generator.selected;\n};\n\nconst getGeneratorResult = (state: AppState) => {\n  return state.generator.result;\n};\n\nexport const getSelectedPlayersReselect = createSelector(getSelectedPlayers, selected => selected);\nexport const getGeneratorResultReselect = createSelector(getGeneratorResult, result => result);\nexport const getGeneratorErrors = (state: AppState) => {\n  return state.generator.error;\n};\n","import React from 'react';\n\nimport Error from 'components/Error';\nimport Button from 'components/general/Button';\nimport Team from 'components/Team';\n\nimport { TXT_RESULTS, TXT_SAVE } from 'const/Vars';\nimport ITeam from 'types/interface/ITeam';\n\ninterface IProps {\n  result: ITeam[];\n  errors?: string;\n  auth: {\n    isAuth: boolean;\n  };\n  onSaveResult: () => void;\n}\n\nconst GeneratorResult: React.FC<IProps> = ({ result, onSaveResult, errors, auth: { isAuth } }) => {\n  if (!result.length) {\n    return null;\n  }\n\n  const results = result.map((team: any, idx: number) => {\n    if (!Object.keys(team).length) {\n      return null;\n    }\n\n    return (\n      <div className=\"col-md-4 mt-3 mt-md-0\" key={idx}>\n        <Team players={team} color={idx}/>\n      </div>\n    );\n  });\n\n  const SaveButton = () => {\n    if (!isAuth) {\n      return null;\n    }\n    return <Button onClick={onSaveResult}>{TXT_SAVE}</Button>;\n  };\n\n  return (\n    <div className=\"jumbotron mt-3 pt-5 pb-5\">\n      <h2>{TXT_RESULTS}</h2>\n\n      <Error message={errors}/>\n\n      <div className=\"row mb-4\">\n        {results}\n      </div>\n\n      <SaveButton/>\n    </div>\n  );\n};\n\nexport default React.memo(GeneratorResult);\n","import React, { useEffect } from 'react';\n\nimport * as generatorActions from 'store/actions/generator';\nimport * as playerActions from 'store/actions/player';\n\nimport { connect } from 'react-redux';\nimport { getAuthReselect } from 'store/selectors/auth';\nimport { getGeneratorErrors, getGeneratorResultReselect, getSelectedPlayersReselect } from 'store/selectors/generator';\nimport { getPlayerListReselect } from 'store/selectors/player';\nimport { AppState } from 'store/store';\n\nimport Button from 'components/general/Button';\nimport Spinner from 'components/Spinner';\nimport GeneratorResult from './GeneratorResult';\n\nimport IPlayer from 'types/interface/IPlayer';\nimport ITeam from 'types/interface/ITeam';\n\nimport { TXT_GENERATOR_GET_TEAMS, TXT_PAGE_GENERATOR, TXT_RESET } from 'const/Vars';\n\ninterface IProps {\n  auth: {\n    isAuth: boolean;\n  };\n  list: IPlayer[];\n  selected: IPlayer[];\n  result: ITeam[];\n  errors?: string;\n  generatorPlayerSelected: (player: IPlayer) => void;\n  generatorPlayersReset: () => void;\n  generatorRun: (teams: any[]) => void;\n  generatorSaveResult: (result: ITeam[]) => void;\n  getPlayers: () => void;\n}\n\nconst GeneratorContainer: React.FC<IProps> = (\n  {\n    auth,\n    list, selected, result, errors,\n    generatorPlayerSelected, generatorPlayersReset, generatorRun, generatorSaveResult,\n    getPlayers,\n  }) => {\n\n  useEffect(\n    () => {\n      getPlayers();\n    },\n    [getPlayers]);\n\n  if (!list) {\n    return <Spinner/>;\n  }\n\n  const playerList = list.map((player) => {\n    const { _id: id, name, damage } = player;\n    const selectedClass = selected.find(pl => pl._id === id) ? 'bg-success text-white' : '';\n    const damageClass = damage ? 'card-muted' : '';\n\n    return (\n      <div\n        key={id}\n        className=\"col-6 col-md-3 mb-3\"\n        onClick={() => generatorPlayerSelected(player)}\n      >\n        <div className={`card p-2 ${selectedClass} ${damageClass}`}>\n          {name}\n        </div>\n      </div>\n    );\n  });\n\n  const SelectedCount = () => {\n    if (!selected.length) {\n      return null;\n    }\n    return <span className=\"badge badge-pill badge-info ml-2\">{selected.length}</span>;\n  };\n\n  const BtnGroup = () => {\n    return (\n      <div className=\"btn-group-lg btn-group\">\n        <Button onClick={onGenerateClick}>{TXT_GENERATOR_GET_TEAMS}</Button>\n        <Button mod={'outline-primary'} onClick={generatorPlayersReset}>{TXT_RESET}</Button>\n      </div>\n    );\n  };\n\n  const onSaveResult = () => {\n    generatorSaveResult(result);\n  };\n\n  const onGenerateClick = () => {\n    const players = selected;\n\n    const getRandomInt = (min: number, max: number) => {\n      return Math.floor(Math.random() * (max - min)) + min;\n    };\n\n    const playerToTeam = (team: IPlayer[], box1: IPlayer[], box2: IPlayer[], box3: IPlayer[]) => {\n      let random = 0;\n      let startList = box1;\n\n      if (startList.length < 1) {\n        startList = box2;\n      }\n      if (startList.length < 1) {\n        startList = box3;\n      }\n      if (startList.length > 0) {\n        random = getRandomInt(0, (startList.length));\n        team.push(startList[random]);\n        startList.splice(random, 1);\n      }\n      return team;\n    };\n\n    const resBox1 = players.filter(e => e.box === 1);\n    const resBox2 = players.filter(e => e.box === 2);\n    const resBox3 = players.filter(e => e.box === 3);\n\n    let team1: IPlayer[] = [];\n    let team2: IPlayer[] = [];\n    let team3: IPlayer[] = [];\n\n    players.map(() => {\n      team1 = playerToTeam(team1, resBox1, resBox2, resBox3);\n      team2 = playerToTeam(team2, resBox1, resBox2, resBox3);\n\n      if (players.length >= 15) {\n        team3 = playerToTeam(team3, resBox1, resBox2, resBox3);\n      }\n\n      return [team1, team2, team3];\n    });\n\n    generatorRun([team1, team2, team3]);\n  };\n\n  return (\n    <div className=\"generator-page\">\n      <h1 className=\"d-flex\">\n        {TXT_PAGE_GENERATOR}\n        <SelectedCount/>\n      </h1>\n\n      <div className=\"row\">\n        {playerList}\n      </div>\n\n      <BtnGroup/>\n\n      <GeneratorResult\n        auth={auth}\n        errors={errors}\n        result={result}\n        onSaveResult={onSaveResult}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  auth: getAuthReselect(state),\n  errors: getGeneratorErrors(state),\n  list: getPlayerListReselect(state),\n  result: getGeneratorResultReselect(state),\n  selected: getSelectedPlayersReselect(state),\n});\n\nconst mapDispatchToProps = {\n  generatorPlayerSelected: generatorActions.generatorPlayerSelected,\n  generatorPlayersReset: generatorActions.generatorPlayersReset,\n  generatorRun: generatorActions.generatorRun,\n  generatorSaveResult: generatorActions.generatorSaveResult,\n  getPlayers: playerActions.getPlayers,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(React.memo(GeneratorContainer));\n","import { Dispatch } from 'react';\n\nimport { playdayAPI } from 'api/api';\nimport { AppActions } from 'types';\n\nimport IPlayer from 'types/interface/IPlayer';\nimport ITeam from 'types/interface/ITeam';\n\nexport const generatorPlayerSelected = (player: IPlayer): AppActions => ({\n  player,\n  type: 'GENERATOR_PLAYER_SELECT',\n});\n\nexport const generatorPlayersReset = (): AppActions => ({\n  type: 'GENERATOR_SELECT_RESET',\n});\n\nexport const generatorRun = (teams: ITeam[]): AppActions => ({\n  teams,\n  type: 'GENERATOR_RUN',\n});\n\nconst generatorSaveRequested = (): AppActions => ({\n  type: 'GENERATOR_SAVE_REQUEST',\n});\n\nconst generatorSaveSuccess = (): AppActions => ({\n  type: 'GENERATOR_SAVE_SUCCESS',\n});\n\nconst generatorSaveError = (error: string): AppActions => {\n  return {\n    error,\n    type: 'GENERATOR_SAVE_FAILURE',\n  };\n};\n\nexport const generatorSaveResult = (teams: ITeam[]) => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(generatorSaveRequested());\n\n  try {\n    const res = await playdayAPI.addPlayday(teams);\n    dispatch(generatorSaveSuccess());\n    return res.data;\n    // console.log(res);\n  } catch (e) {\n    dispatch(generatorSaveError(e.response.data.message));\n  }\n};\n","import React from 'react';\n\nimport { useFormik } from 'formik';\n\nimport InputField from 'components/Form/InputField';\nimport Button from 'components/general/Button';\n\nimport { TXT_ADD, TXT_SELECT } from 'const/Vars';\nimport IPlayer from 'types/interface/IPlayer';\n\ninterface IProps {\n  id: number;\n  players: IPlayer[];\n  onSubmit: (data: any, team: any) => void;\n}\n\nconst PlaydayAddPlayer: React.FC<IProps> = ({ players, id, onSubmit }) => {\n  const loginFormOptions = useFormik({\n    initialValues: {},\n    onSubmit: (values) => {\n      onSubmit(values, id);\n    },\n  });\n\n  if (!players.length) {\n    return null;\n  }\n\n  const options = players.map(({ _id, name }: IPlayer) => {\n    return <option value={_id} key={_id}>{name}</option>;\n  });\n\n  const { handleSubmit, ...props } = loginFormOptions;\n\n  return (\n    <div className=\"playday-add-player mt-3 border-top pt-3 mt-3\">\n      <form className=\"row\" onSubmit={handleSubmit}>\n        <div className=\"col-md-8\">\n          <InputField name={`select_team_${id}`} type=\"select\" {...props}>\n            <option defaultValue={''}>{TXT_SELECT}</option>\n            {options}\n          </InputField>\n        </div>\n        <div className=\"col-md-4\">\n          <Button\n            type={'submit'}\n            mod={'outline-info'}\n            className=\"mt-1 mt-md-0\"\n            wide={true}\n          >\n            {TXT_ADD}\n          </Button>\n        </div>\n      </form>\n\n    </div>\n  );\n};\n\nexport default PlaydayAddPlayer;\n","import React from 'react';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport InputField from 'components/Form/InputField';\nimport Button from 'components/general/Button';\n\nimport { TXT_GOALS, TXT_SAVE } from 'const/Vars';\nimport IPlayday from 'types/interface/IPlayday';\n\ninterface IProps {\n  onSubmit: (formData: any) => void;\n  current: IPlayday;\n}\n\nconst PlaydayEditForm: React.FC<IProps> = ({ onSubmit, current }) => {\n  const loginFormOptions = useFormik({\n    initialValues: {\n      res1: current.goals[0],\n      res2: current.goals[1],\n    },\n    onSubmit: (values) => {\n      onSubmit(values);\n    },\n    validationSchema: Yup.object().shape({\n      res1: Yup.string().required('Обязательное поле'),\n      res2: Yup.string().required('Обязательное поле'),\n    }),\n  });\n\n  const { handleSubmit, ...props } = loginFormOptions;\n\n  if (!current) {\n    return null;\n  }\n\n  return (\n    <div>\n      <form className=\"playday-edit-form mb-3\" onSubmit={handleSubmit}>\n        <div className=\"row\">\n          <div className=\"col-md-4 mt-3 mt-md-0\">\n            <InputField placeholder={TXT_GOALS} name=\"res1\" {...props} autoComplete=\"off\"/>\n          </div>\n\n          <div className=\"col-md-4 mt-3 mt-md-0\">\n            <InputField placeholder={TXT_GOALS} name=\"res2\" {...props} autoComplete=\"off\"/>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12 text-center\">\n            <Button type=\"submit\">{TXT_SAVE}</Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default React.memo(PlaydayEditForm);\n","import React, { useState } from 'react';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport InputField from 'components/Form/InputField';\n\nimport { TXT_FIELD_REQUIRED, TXT_LABEL_NAME } from 'const/Vars';\nimport IPlayday from 'types/interface/IPlayday';\n\ninterface IProps {\n  current: IPlayday;\n  onSubmit: any;\n}\n\nconst PlaydayTitle: React.FC<IProps> = ({ current, onSubmit }) => {\n  const [showEditTitle, setEditTitle] = useState(false);\n\n  const loginFormOptions = useFormik({\n    initialValues: {\n      name: current.name,\n    },\n    onSubmit: (values) => {\n      onSubmit(values, current._id);\n      setEditTitle(!showEditTitle);\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required(TXT_FIELD_REQUIRED),\n    }),\n  });\n\n  const onTitleClick = () => {\n    setEditTitle(!showEditTitle);\n  };\n\n  let title;\n  const { handleSubmit, ...props } = loginFormOptions;\n\n  if (showEditTitle) {\n    title = (\n      <form onSubmit={handleSubmit}>\n        <InputField\n          name=\"name\"\n          autoFocus={true}\n          placeholder={TXT_LABEL_NAME}\n          {...props}\n          handleBlur={handleSubmit}\n        />\n      </form>\n    );\n  } else {\n    title = <h1 onDoubleClick={onTitleClick}>{current.name}</h1>;\n  }\n\n  return title;\n};\n\nexport default PlaydayTitle;\n","import React, { useEffect } from 'react';\n\nimport * as actions from 'store/actions/playday';\nimport * as playerActions from 'store/actions/player';\nimport { AppState } from 'store/store';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getAuthReselect } from 'store/selectors/auth';\nimport { getPlaydayReselect } from 'store/selectors/playday';\nimport { getPlayerFreeListReselect } from 'store/selectors/player';\n\nimport Spinner from 'components/Spinner';\nimport Team from 'components/Team';\nimport withAuthRedirect from 'hoc/withAuthRedirect';\n\nimport PlaydayAddPlayer from './PlaydayAddPlayer';\nimport PlaydayEditForm from './PlaydayEditForm';\nimport PlaydayTitle from './PlaydayTitle';\n\nimport IPlayday from 'types/interface/IPlayday';\nimport IPlayer from 'types/interface/IPlayer';\n\ninterface IProps {\n  getPlayday: (id: string) => void;\n  updatePlayday: (id: string, name: string, data: any, history?: any) => void;\n  getPlayers: () => void;\n  getPlayer: (playerId: string) => void;\n  current: IPlayday | null;\n  match: { params: { id: string } };\n  size?: number;\n  history: any;\n  auth: { isAuth: boolean };\n  setFreePlayers: (players: IPlayer[]) => void;\n  freePlayers: IPlayer[];\n  playdayUpdateTeams: (playerId: any, teamNumber: string, currentPlayday: IPlayday) => void;\n}\n\ninterface IPropsFormData {\n  id: string;\n  name: string;\n  res1: number;\n  res2: number;\n  res3?: number;\n}\n\nconst PlaydayEditContainer: React.FC<IProps> = (\n  {\n    current, getPlayday, updatePlayday,\n    match: { params: { id } },\n    history, auth, getPlayers, freePlayers,\n    playdayUpdateTeams,\n  },\n) => {\n  useEffect(\n    () => {\n      getPlayday(id);\n      getPlayers();\n    },\n    [getPlayers, getPlayday, id]);\n\n  if (!current) {\n    return <Spinner/>;\n  }\n\n  const { _id: currentId, name } = current;\n\n  const onDeletePlayer = (data: IPlayer, teamNumber: string) => {\n    playdayUpdateTeams(data._id, teamNumber, current);\n  };\n\n  const onAddPlayerToTeam = (data: IPlayer, teamNumber: string) => {\n    playdayUpdateTeams(Object.values(data)[0], teamNumber, current);\n  };\n\n  const onSubmit = (formData: IPropsFormData) => {\n    updatePlayday(currentId, name, { goals: Object.values(formData) }, history);\n  };\n\n  const onTitleEdit = (formData: IPropsFormData) => {\n    if (name !== formData.name) {\n      updatePlayday(currentId, name, { name: formData.name });\n    }\n  };\n\n  const teamList = current.teams.map((team, idx) => (\n      <div className=\"col-md-4 mt-3 mt-md-0\" key={idx}>\n        <Team\n          players={team}\n          color={idx}\n          deletePlayerFromTeam={onDeletePlayer}\n          auth={auth}\n        />\n        <PlaydayAddPlayer\n          players={freePlayers}\n          onSubmit={onAddPlayerToTeam}\n          id={idx}\n        />\n      </div>\n    ),\n  );\n\n  return (\n    <div className=\"playday-edit-container\">\n      <PlaydayTitle current={current} onSubmit={onTitleEdit}/>\n\n      <PlaydayEditForm\n        onSubmit={onSubmit}\n        current={current}\n      />\n\n      <div className=\"row\">\n        {teamList}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  auth: getAuthReselect(state),\n  current: getPlaydayReselect(state),\n  freePlayers: getPlayerFreeListReselect(state),\n});\n\nconst mapDispatchToProps = {\n  getPlayday: actions.getPlayday,\n  getPlayer: playerActions.getPlayer,\n  getPlayers: playerActions.getPlayers,\n  playdayUpdateTeams: actions.playdayUpdateTeams,\n  updatePlayday: actions.updatePlayday,\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect,\n)(PlaydayEditContainer);\n","import React from 'react';\n\nimport Spinner from 'components/Spinner';\n\nconst withSuspense = (Component: any) => {\n  return (props: any) => {\n    return (\n      <React.Suspense fallback={<Spinner/>}>\n        <Component {...props} />\n      </React.Suspense>\n    );\n  };\n};\n\nexport default withSuspense;\n","import React from 'react';\n\nimport AppHeader from 'components/AppHeader';\nimport { Login } from 'components/Auth';\nimport GeneratorContainer from 'components/Pages/Generator/GeneratorContainer';\nimport PlaydayEditContainer from 'components/Pages/Playdays/Edit/PlaydayEditContainer';\n\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport {\n  ROUTE_EDIT_PLAYDAY,\n  ROUTE_EDIT_PLAYER,\n  ROUTE_GENERATOR,\n  ROUTE_HOME,\n  ROUTE_LOGIN,\n  ROUTE_NEW_PLAYER,\n  ROUTE_PLAYDAYS,\n  ROUTE_PLAYERS,\n} from 'const/Routes';\n\nimport withSuspense from 'hoc/withSuspense';\n\nconst PLAYERS_CONTAINER = React.lazy((): any => import('../Pages/Players/PlayersContainer'));\nconst PLAYER_VIEW = React.lazy((): any => import('../Pages/Players/View/PlayerView'));\nconst POST_PLAYER = React.lazy((): any => import('../Pages/Players/PostPlayer/PostPlayer'));\nconst PLAYDAYS_CONTAINER = React.lazy((): any => import('../Pages/Playdays/PlaydaysContainer'));\nconst App: React.FC<{}> = () => {\n  return (\n    <div className=\"app\">\n      <AppHeader/>\n\n      <div className=\"container\">\n        <Switch>\n          <Route path={ROUTE_LOGIN} component={Login}/>\n\n          <Route path={ROUTE_GENERATOR} component={GeneratorContainer}/>\n          <Route path={ROUTE_PLAYERS} exact={true} component={withSuspense(PLAYERS_CONTAINER)}/>\n          <Route path={`${ROUTE_PLAYERS}:handle?`} component={withSuspense(PLAYER_VIEW)}/>\n          <Route path={`${ROUTE_PLAYDAYS}:id?`} component={withSuspense(PLAYDAYS_CONTAINER)}/>\n          <Route path={`${ROUTE_EDIT_PLAYDAY}:id?`} component={withSuspense(PlaydayEditContainer)}/>\n\n          <Route path={`${ROUTE_EDIT_PLAYER}:id`} component={withSuspense(POST_PLAYER)}/>\n          <Route path={ROUTE_NEW_PLAYER} component={withSuspense(POST_PLAYER)}/>\n\n          <Redirect from={ROUTE_HOME} to={ROUTE_GENERATOR}/>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import App from './App';\nimport './css/App.css';\nimport './css/bootstrap_sandstone.css';\n// import './css/bootstrap_materia.css';\n// import './css/bootstrap_cosmo.css';\n// import './css/bootstrap_simplex.css';\n// import './css/bootstrap_yeti.css';\n// import './css/bootstrap_united.css';\n// import './css/bootstrap_lux.css';\n// import './css/bootstrap_flatly.css';\n// import './css/bootstrap_lumen.css';\n// import './css/bootstrap_pulse.css';\n// import './css/bootstrap_minty.css';\n// import './css/bootstrap_sketchy.css';\n// import './css/bootstrap_solar.css';\n// import './css/bootstrap_superhero.css';\n// import './css/bootstrap_litera.css'\n\nexport default App;\n","import { AuthActionTypes } from 'types/authActions';\nimport ITokenJWT from 'types/interface/ITokenJWT';\n\ninterface IAuthReducerState {\n  isAuth: boolean;\n  user: ITokenJWT | null;\n  loading: boolean;\n  error?: string;\n}\n\nconst authReducerDefaultState: IAuthReducerState = {\n  error: '',\n  isAuth: false,\n  loading: false,\n  user: null,\n};\n\nconst authReducer = (\n  state = authReducerDefaultState,\n  action: AuthActionTypes,\n): IAuthReducerState => {\n  switch (action.type) {\n    case 'AUTH_USER_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'AUTH_USER_SUCCESS':\n      return {\n        ...state,\n        error: '',\n        isAuth: true,\n        loading: false,\n        user: action.userData,\n      };\n\n    case 'FETCH_USER_SUCCESS':\n      return {\n        ...state,\n        isAuth: true,\n        loading: false,\n        user: action.decoded,\n      };\n\n    case 'AUTH_USER_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n\n    case 'LOGOUT_USER':\n      return {\n        ...state,\n        isAuth: false,\n        loading: false,\n        user: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { GeneratorActionTypes } from 'types/generatorActions';\nimport IPlayer from 'types/interface/IPlayer';\nimport ITeam from 'types/interface/ITeam';\n\nconst updateSelected = (state: any, player: IPlayer) => {\n  let newSelected = [];\n  const { selected } = state;\n  const existPlayer = selected.find((pl: IPlayer) => pl._id === player._id);\n\n  if (existPlayer) {\n    const idx = selected.findIndex((pl: IPlayer) => pl._id === existPlayer._id);\n    const newArr = [...selected.slice(0, idx), ...selected.slice(idx + 1)];\n    newSelected = newArr;\n  } else {\n    const newArr = [...selected, player];\n    newSelected = newArr;\n  }\n\n  return {\n    ...state,\n    selected: newSelected,\n  };\n};\n\ninterface IGeneratorReducerState {\n  error: string;\n  loading: boolean;\n  result: ITeam[];\n  selected: IPlayer[];\n}\n\nconst generatorReducerDefaultState: IGeneratorReducerState = {\n  error: '',\n  loading: false,\n  result: [],\n  selected: [],\n};\n\nconst generatorReducer = (\n  state = generatorReducerDefaultState,\n  action: GeneratorActionTypes,\n): IGeneratorReducerState => {\n\n  switch (action.type) {\n    case 'GENERATOR_PLAYER_SELECT':\n      return updateSelected(state, action.player);\n\n    case 'GENERATOR_RUN':\n      return {\n        ...state,\n        result: action.teams,\n      };\n\n    case 'GENERATOR_SELECT_RESET':\n      return {\n        ...state,\n        error: '',\n        result: [],\n        selected: [],\n      };\n\n    case 'GENERATOR_SAVE_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n      };\n\n    case 'GENERATOR_SAVE_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'GENERATOR_SAVE_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default generatorReducer;\n","import { PlaydayActionTypes } from 'types/playdayActions';\nimport { newTeams } from 'utils/newTeams';\n\nimport IPlayday from 'types/interface/IPlayday';\nimport IPlaydayList from 'types/interface/IPlaydayList';\nimport IPlayer from 'types/interface/IPlayer';\n\nconst updateExistPlayday = (state: any, data: { player: IPlayer, team: string }) => {\n  return {\n    ...state,\n    current: {\n      ...state.current,\n      teams: newTeams(state.current.teams, data.team, data.player),\n    },\n  };\n};\n\ninterface IPlaydayReducerState {\n  current: IPlayday | null;\n  error: string;\n  freePlayers: IPlayer[];\n  list: IPlaydayList[];\n  loading: boolean;\n}\n\nconst playdayReducerDefaultState: IPlaydayReducerState = {\n  current: null,\n  error: '',\n  freePlayers: [],\n  list: [],\n  loading: false,\n};\n\nconst playdayReducer = (\n  state = playdayReducerDefaultState,\n  action: PlaydayActionTypes,\n): IPlaydayReducerState => {\n\n  switch (action.type) {\n    case 'FETCH_PLAYDAYS_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'FETCH_PLAYDAYS_SUCCESS':\n      return {\n        ...state,\n        list: action.playdays,\n        loading: false,\n      };\n\n    case 'FETCH_PLAYDAYS_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n      };\n\n    case 'FETCH_PLAYDAY_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'FETCH_PLAYDAY_SUCCESS':\n      return {\n        ...state,\n        current: action.current,\n        loading: false,\n      };\n\n    case 'FETCH_POST_PLAYDAY_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'FETCH_POST_PLAYDAY_SUCCESS':\n      return {\n        ...state,\n        current: action.current,\n        loading: false,\n      };\n\n    case 'PLAYDAY_PLAYER_REMOVE':\n      return updateExistPlayday(state, action.data);\n\n    case 'PLAYDAY_PLAYER_ADD':\n      return updateExistPlayday(state, action.data);\n\n    default:\n      return state;\n  }\n};\n\nexport default playdayReducer;\n","import IPlayer from 'types/interface/IPlayer';\nimport { PlayerActionTypes } from 'types/playerActions';\n\ninterface IPlayerReducerState {\n  current: IPlayer | null;\n  error: string;\n  freePlayers: IPlayer[];\n  list: IPlayer[];\n  loading: boolean;\n  selected: IPlayer[];\n}\n\nconst playerReducerDefaultState: IPlayerReducerState = {\n  current: null,\n  error: '',\n  freePlayers: [],\n  list: [],\n  loading: false,\n  selected: [],\n};\n\nconst playerReducer = (\n  state = playerReducerDefaultState,\n  action: PlayerActionTypes,\n): IPlayerReducerState => {\n  switch (action.type) {\n    case 'FETCH_PLAYERS_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'FETCH_PLAYERS_SUCCESS':\n      return {\n        ...state,\n        list: action.players,\n        loading: false,\n      };\n\n    case 'FETCH_PLAYERS_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n\n    case 'FETCH_PLAYER_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'FETCH_PLAYER_SUCCESS':\n      return {\n        ...state,\n        current: action.player,\n        loading: false,\n      };\n\n    case 'FETCH_PLAYER_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n\n    case 'FETCH_POST_PLAYER_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'FETCH_POST_PLAYER_SUCCESS':\n      return {\n        ...state,\n        current: action.player,\n        loading: false,\n      };\n\n    case 'SET_FREE_PLAYERS':\n      return {\n        ...state,\n        freePlayers: action.players,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default playerReducer;\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\n\nimport authReducer from './reducers/authReducer';\nimport generatorReducer from './reducers/generatorReducer';\nimport playdayReducer from './reducers/playdayReducer';\nimport playerReducer from './reducers/playerReducer';\n\nimport { AppActions } from 'types';\n\ndeclare global {\n  interface IWindow {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  generator: generatorReducer,\n  playday: playdayReducer,\n  player: playerReducer,\n});\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport type AppState = ReturnType<typeof reducers>;\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunk as ThunkMiddleware<AppState, AppActions>),\n    // composeEnhancers()\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from 'components/App';\n\nimport JwtDecode from 'jwt-decode';\nimport setAuthToken from 'utils/set-auth-token';\n\nimport { logoutUser, setCurrentUser } from 'store/actions/auth';\nimport store from 'store/store';\nimport ITokenJWT from 'types/interface/ITokenJWT';\n\nif (localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n\n  const decoded = JwtDecode<ITokenJWT>(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  }\n}\n\nReactDOM.render(\n  // tslint:disable-next-line:jsx-wrap-multiline\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'));\n","import React from 'react';\nimport s from './Spinner.module.css';\n\nconst Spinner = () => {\n  return (\n    <div className={s.spinner}>\n      <div className={s.ldsCss}>\n        <div className={s.ldsDualRing}>\n          <div>&nbsp;</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import Spinner from './Spinner';\nexport default Spinner;\n","import { Dispatch } from 'react';\n\nimport { playerAPI } from 'api/api';\nimport { AppActions } from 'types';\n\nimport { DEFAULT_PLAYER_IMAGE } from 'const/Vars';\nimport IPlayer from 'types/interface/IPlayer';\n\nconst playerListRequested = (): AppActions => ({\n  type: 'FETCH_PLAYERS_REQUEST',\n});\n\nconst playerListLoaded = (players: IPlayer[]): AppActions => ({\n  players,\n  type: 'FETCH_PLAYERS_SUCCESS',\n});\n\nconst playerListError = (error: string): AppActions => ({\n  error,\n  type: 'FETCH_PLAYERS_FAILURE',\n});\n\nconst playerRequested = (): AppActions => ({\n  type: 'FETCH_PLAYER_REQUEST',\n});\n\nconst playerLoaded = (player: IPlayer): AppActions => ({\n  player,\n  type: 'FETCH_PLAYER_SUCCESS',\n});\n\nconst playerPostRequested = (): AppActions => ({\n  type: 'FETCH_POST_PLAYER_REQUEST',\n});\n\nconst playerPostSuccess = (player: IPlayer | null): AppActions => ({\n  player,\n  type: 'FETCH_POST_PLAYER_SUCCESS',\n});\n\nconst playersSetFree = (players: IPlayer[]): AppActions => ({\n  players,\n  type: 'SET_FREE_PLAYERS',\n});\n\nexport const getPlayers = () => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(playerListRequested());\n\n  try {\n    const res = await playerAPI.getPlayerList();\n    dispatch(playerListLoaded(res.data));\n  } catch (e) {\n    dispatch(playerListError(e.message));\n  }\n};\n\nexport const getPlayer = (playerId: string) => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(playerRequested());\n\n  try {\n    const res = await playerAPI.getPlayer(playerId);\n    dispatch(playerLoaded(res.data));\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n\nexport const setFreePlayers = (players: IPlayer[]) => (dispatch: Dispatch<AppActions>) => {\n  dispatch(playersSetFree(players));\n};\n\nexport const postPlayer = (\n  player: IPlayer, history: any,\n) => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(playerPostRequested());\n\n  try {\n    if (!player.image) {\n      player.image = DEFAULT_PLAYER_IMAGE;\n    }\n    const res = await playerAPI.addPlayer(player);\n    dispatch(playerPostSuccess(res.data));\n    history.push('/players');\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n\nexport const updatePlayer = (\n  playerId: string, playerData: IPlayer, history: any,\n) => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(playerPostRequested());\n\n  try {\n    if (!playerData.image) {\n      playerData.image = DEFAULT_PLAYER_IMAGE;\n    }\n\n    const res = await playerAPI.updatePlayer(playerId, playerData);\n    dispatch(playerPostSuccess(res.data));\n    history.push('/players');\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n\nexport const deletePlayer = (id: string, history: any) => async () => {\n  try {\n    const res = await playerAPI.deletePlayer(id);\n    history.push('/players');\n    // console.log(res.data);\n    return res.data;\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n\nexport const getCurrentPlayer = (id: string) => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(playerPostRequested());\n  try {\n    const res = await playerAPI.getPlayer(id);\n    dispatch(playerPostSuccess(res.data));\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n\nexport const getPlayerByHandle = (handle: string) => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(playerRequested());\n\n  try {\n    const res = await playerAPI.getPlayerByHandle(handle);\n    dispatch(playerLoaded(res.data));\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const resetCurrentPlayer = () => (dispatch: Dispatch<AppActions>) => {\n  dispatch(playerPostSuccess(null));\n};\n","import { createSelector } from 'reselect';\nimport { AppState } from 'store/store';\nimport { getPlayday } from './playday';\n\nconst getPlayerList = (state: AppState) => {\n  return state.player.list;\n};\n\nconst getPlayerLoading = (state: AppState) => {\n  return state.player.loading;\n};\n\nconst getPlayerError = (state: AppState) => {\n  return state.player.error;\n};\n\nconst getPlayerCurrent = (state: AppState) => {\n  return state.player.current;\n};\n\nexport const getPlayerFreeListReselect = createSelector(\n  [getPlayerList, getPlayday],\n  (list, playday) => {\n\n    let newArr: any[] = [];\n    if (playday && list) {\n      const selectedPlayers = [...playday.teams[0], ...playday.teams[1], ...playday.teams[2]];\n\n      const keysSelectedFilter = selectedPlayers.map(i => i._id);\n      newArr = list.filter(pl => !keysSelectedFilter.includes(pl._id)).map(pl => pl);\n    }\n\n    return newArr;\n  },\n);\n\nexport const getPlayerListReselect = createSelector(getPlayerList, list => list);\nexport const getPlayerLoadingReselect = createSelector(getPlayerLoading, loading => loading);\nexport const getPlayerErrorReselect = createSelector(getPlayerError, error => error);\nexport const getPlayerCurrentReselect = createSelector(getPlayerCurrent, current => current);\n","const ROUTE_HOME = '/';\nconst ROUTE_LOGIN = '/login/';\nconst ROUTE_PLAYERS = '/players/';\nconst ROUTE_NEW_PLAYER = '/new-player/';\nconst ROUTE_GENERATOR = '/generator/';\nconst ROUTE_PLAYDAYS = '/playdays/';\nconst ROUTE_EDIT_PLAYDAY = '/edit-playday/';\nconst ROUTE_EDIT_PLAYER = '/edit-player/';\n\nexport {\n  ROUTE_HOME,\n  ROUTE_LOGIN,\n  ROUTE_PLAYERS,\n  ROUTE_NEW_PLAYER,\n  ROUTE_GENERATOR,\n  ROUTE_PLAYDAYS,\n  ROUTE_EDIT_PLAYER,\n  ROUTE_EDIT_PLAYDAY,\n};\n","import React from 'react';\n\ninterface IProps {\n  message?: string;\n}\n\nconst Error: React.FC<IProps> = ({ message }) => {\n\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <div className=\"alert alert-danger\">\n      {message}\n    </div>\n  );\n};\n\nexport default React.memo(Error);\n","import Error from './Error';\n\nexport default Error;\n","import axios from 'axios';\n\nimport IPlayday from 'types/interface/IPlayday';\nimport IPlaydayList from 'types/interface/IPlaydayList';\nimport IPlayer from 'types/interface/IPlayer';\n\n// axios.defaults.baseURL = 'http://localhost:5001/fb/api/';\naxios.defaults.baseURL = 'https://node.joomdesign.ru/fb/api/';\n\ninterface IAuthResolve {\n  data: {\n    success: boolean;\n    token: string;\n  };\n}\n\ninterface IAuthLogin {\n  email: string;\n  password: string;\n}\n\nexport const authAPI = {\n  // registration(username, email, password) {\n  //   return axios.post(`users`, {username, email, password})\n  // },\n  login(userData: IAuthLogin): Promise<IAuthResolve> {\n    return axios.post('users/login', userData);\n  },\n};\n\nexport const playerAPI = {\n  getPlayerList(): Promise<any> {\n    return axios.get('players');\n  },\n  getPlayer(id: string): Promise<any> {\n    return axios.get(`players/${id}`);\n  },\n  getPlayerByHandle(handle: string): Promise<any> {\n    return axios.get(`players/handle/${handle}`);\n  },\n  addPlayer(player: IPlayer): Promise<any> {\n    return axios.post('players', player);\n  },\n  updatePlayer(id: string, data: IPlayer): Promise<any> {\n    return axios.put(`players/${id}`, data);\n  },\n  deletePlayer(id: string): Promise<any> {\n    return axios.delete(`players/${id}`);\n  },\n};\n\nexport const playdayAPI = {\n  addPlayday(teams: any): Promise<{ data: IPlayday }> {\n    return axios.post('/playdays', teams);\n  },\n  getPlaydays(): Promise<{ data: IPlaydayList[] }> {\n    return axios.get('/playdays');\n  },\n  getPlayday(id: string): Promise<{ data: IPlayday }> {\n    return axios.get(`/playdays/${id}`);\n  },\n  updatePlayday(id: string, data: any): Promise<{ data: IPlayday }> {\n    return axios.put(`playdays/${id}`, data);\n  },\n};\n","import { createSelector } from 'reselect';\nimport { AppState } from 'store/store';\n\nconst getPlaydays = (state: AppState) => {\n  return state.playday.list;\n};\n\nconst getPlaydaysLoading = (state: AppState) => {\n  return state.playday.loading;\n};\n\nexport const getPlayday = (state: AppState) => {\n  return state.playday.current;\n};\n\nexport const getPlaydaysReselect = createSelector(getPlaydays, list => list);\nexport const getPlaydaysLoadingReselect = createSelector(getPlaydaysLoading, loading => loading);\nexport const getPlaydayReselect = createSelector(getPlayday, current => current);\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport './Team.css';\n\nimport Button from 'components/general/Button';\n\nimport { ROUTE_PLAYERS } from 'const/Routes';\nimport { TXT_DELETE } from 'const/Vars';\n\nimport IPlayer from 'types/interface/IPlayer';\n\ninterface IProps {\n  players: IPlayer[];\n  goals?: number;\n  color: number;\n  deletePlayerFromTeam?: any;\n  auth?: { isAuth: boolean };\n  view?: 'compact' | 'default';\n}\n\nconst Team: React.FC<IProps> = ({ players, goals, color, deletePlayerFromTeam, auth = false, view = 'default' }) => {\n  if (!players.length) {\n    return null;\n  }\n\n  const Total = () => {\n    if (!goals) {\n      return null;\n    }\n    return <span className=\"badge ml-auto\">{goals}</span>;\n  };\n\n  const teamData = [\n    { color: 'red', title: 'Красные незабудки' },\n    { color: 'blue', title: 'Синие снегири' },\n    { color: 'white', title: 'Белые викинги' },\n  ];\n\n  const list = players.map((player) => {\n    const { _id, image, name, handle } = player;\n\n    const DeleteButton = () => {\n      if (!auth) {\n        return null;\n      }\n\n      return (\n        <Button\n          mod={'outline-danger'}\n          className=\"ml-auto btn-sm\"\n          onClick={() => deletePlayerFromTeam(player, color)}\n          title={TXT_DELETE}\n        >X\n        </Button>\n      );\n    };\n\n    return (\n      <div className=\"list-group-item d-flex align-items-center team__player\" key={_id}>\n        <img\n          className=\"rounded-circle team-player__image\"\n          src={image}\n          alt={name}\n          width=\"40\"\n        />\n        <Link to={`${ROUTE_PLAYERS}${handle}`} className=\"ml-2\">{name}</Link>\n        <DeleteButton/>\n      </div>\n    );\n  });\n\n  return (\n    <div className={`list-group team team_color_${teamData[color].color} team_view_${view}`}>\n      <div\n        className=\"list-group-item list-group-item-primary d-flex align-items-center font-weight-bold\"\n      >\n        {teamData[color].title}\n        <Total/>\n      </div>\n      {list}\n    </div>\n  );\n};\n\nexport default React.memo(Team);\n","import Team from './Team';\nexport default Team;\n","import { playdayAPI, playerAPI } from 'api/api';\n\nimport { Dispatch } from 'react';\nimport { AppActions } from 'types';\n\nimport IPlayday from 'types/interface/IPlayday';\nimport IPlaydayList from 'types/interface/IPlaydayList';\nimport IPlayer from 'types/interface/IPlayer';\nimport { newTeams } from 'utils/newTeams';\n\nconst playdayListRequested = (): AppActions => ({\n  type: 'FETCH_PLAYDAYS_REQUEST',\n});\n\nconst playdayListLoaded = (playdays: IPlaydayList[]): AppActions => ({\n  playdays,\n  type: 'FETCH_PLAYDAYS_SUCCESS',\n});\n\nconst playdayListError = (error: string): AppActions => ({\n  error,\n  type: 'FETCH_PLAYDAYS_FAILURE',\n});\n\nconst playdayRequested = (): AppActions => ({\n  type: 'FETCH_PLAYDAY_REQUEST',\n});\n\nconst playdayLoaded = (current: IPlayday): AppActions => ({\n  current,\n  type: 'FETCH_PLAYDAY_SUCCESS',\n});\n\nconst playdayError = (error: string): AppActions => ({\n  error,\n  type: 'FETCH_PLAYDAY_FAILURE',\n});\n\nconst playdayPostRequested = (): AppActions => ({\n  type: 'FETCH_POST_PLAYDAY_REQUEST',\n});\n\nconst playdayPostSuccess = (current: IPlayday): AppActions => ({\n  current,\n  type: 'FETCH_POST_PLAYDAY_SUCCESS',\n});\n\nconst playdayPlayerRemove = (player: IPlayer, team: string): AppActions => ({\n  data: { team, player },\n  type: 'PLAYDAY_PLAYER_REMOVE',\n});\n\nexport const playdayUpdateTeams = (\n  playerId: string, teamNumber: string, current: IPlayday,\n) => async (dispatch: Dispatch<AppActions>) => {\n  try {\n    const player = await playerAPI.getPlayer(playerId);\n    dispatch(playdayPlayerRemove(player.data, teamNumber));\n    const { teams } = current;\n\n    const newPlayday = { ...current, teams: newTeams(teams, teamNumber, player.data) };\n\n    try {\n      const res = await playdayAPI.updatePlayday(newPlayday._id, newPlayday);\n      dispatch(playdayPostSuccess(res.data));\n    } catch (e) {\n      console.error(e);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getPlaydays = () => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(playdayListRequested());\n  try {\n    const res = await playdayAPI.getPlaydays();\n    dispatch(playdayListLoaded(res.data));\n  } catch (e) {\n    dispatch(playdayListError(e.message));\n  }\n};\n\nexport const getPlayday = (id: string) => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(playdayRequested());\n\n  try {\n    const res = await playdayAPI.getPlayday(id);\n    dispatch(playdayLoaded(res.data));\n  } catch (e) {\n    dispatch(playdayError(e.message));\n  }\n};\n\nexport const updatePlayday = (\n  id: string, name: string, playdayData: any, history?: any,\n) => async (dispatch: Dispatch<AppActions>) => {\n  dispatch(playdayPostRequested());\n\n  try {\n    const res = await playdayAPI.updatePlayday(id, playdayData);\n    dispatch(playdayPostSuccess(res.data));\n\n    if (history) {\n      history.push(`/playdays/${id}`);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n};\n","import IPlayer from 'types/interface/IPlayer';\n\nexport const newTeams = (teams: IPlayer[][], teamNumber: string, player: IPlayer) => {\n  return teams.map((team: IPlayer[], idx: number) => {\n\n    let newTeam = team;\n\n    if (idx === parseInt(teamNumber, 10)) {\n      const exPlayer: any = team.find((pl: IPlayer) => pl._id === player._id);\n      if (exPlayer) {\n        const existPlayerIdx = team.findIndex((pl: IPlayer) => pl._id === exPlayer._id);\n        newTeam = [...team.slice(0, existPlayerIdx), ...team.slice(existPlayerIdx + 1)];\n      } else {\n        newTeam = [...team, player];\n      }\n    }\n    return newTeam;\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Neu5\",\"ldsCss\":\"Spinner_ldsCss__1slPF\",\"ldsDualRing\":\"Spinner_ldsDualRing__Cno__\"};"],"sourceRoot":""}