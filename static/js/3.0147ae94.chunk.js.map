{"version":3,"sources":["components/Pages/Playdays/PlaydaysDetails.tsx","components/Pages/Playdays/PlaydaysList.tsx","components/Pages/Playdays/PlaydaysContainer.tsx"],"names":["PlaydaysDetails","playday","auth","teamList","teams","map","team","idx","className","key","Team","players","goals","color","view","editLink","to","ROUTE_EDIT_PLAYDAY","_id","TXT_EDIT","name","PlaydaysList","list","current","length","items","ROUTE_PLAYDAYS","cnames","active","mapDispatchToProps","getPlayday","actions","getPlaydays","compose","connect","state","getAuthReselect","getPlaydayReselect","getPlaydaysReselect","loading","getPlaydaysLoadingReselect","React","memo","error","id","match","params","isAuth","useEffect","Spinner","Error","message","TXT_RESULTS"],"mappings":"mNA6DeA,EA9C2B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAEpD,IAAKD,EACH,OAAO,KAGT,IAAME,EAAWF,EAAQG,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC/B,yBAAKC,UAAU,wBAAwBC,IAAKF,GAC1C,kBAACG,EAAA,EAAD,CACEC,QAASL,EACTM,MAAOX,EAAQW,MAAML,GACrBM,MAAON,EACPO,KAAK,gBAiBPC,EAAWb,EAAO,mBAXP,WACf,OACE,kBAAC,IAAD,CACEM,UAAU,uBACVQ,GAAE,UAAKC,KAAL,OAA0BhB,EAAQiB,MAEnCC,OAKiB,MAAc,KAEtC,OACE,yBAAKX,UAAU,oBACb,wBAAIA,UAAU,UACXP,EAAQmB,MAGVL,EAED,yBAAKP,UAAU,OACZL,K,iBCZMkB,EA1BwB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAE9C,IAAKD,EAAKE,OACR,OAAO,KAGT,IAAMC,EAAQH,EAAKjB,KAAI,YAAoB,IAAjBa,EAAgB,EAAhBA,IAAKE,EAAW,EAAXA,KAC7B,OACE,kBAAC,IAAD,CACEJ,GAAE,UAAKU,KAAL,OAAsBR,GAExBV,UAAWmB,IAAO,yCAA0C,CAAEC,OAAQV,IAAQK,IAC9Ed,IAAKS,GAEJE,MAKP,OACE,wBAAIZ,UAAU,cACXiB,IC6CDI,EAAqB,CACzBC,WAAYC,IACZC,YAAaD,KAGAE,sBACbC,aAbsB,SAACC,GAAD,MAAsB,CAC5CjC,KAAMkC,YAAgBD,GACtBZ,QAASc,YAAmBF,GAC5Bb,KAAMgB,YAAoBH,GAC1BI,QAASC,YAA2BL,MASXN,GADZI,CAEbQ,IAAMC,MAvDoC,SAAC,GAMvC,IAJFV,EAIC,EAJDA,YAAaF,EAIZ,EAJYA,WAAYR,EAIxB,EAJwBA,KAAMiB,EAI9B,EAJ8BA,QAC/BI,EAGC,EAHDA,MAAOpB,EAGN,EAHMA,QAA4BqB,EAGlC,EAHeC,MAASC,OAAUF,GAC3BG,EAEP,EAFD7C,KAAQ6C,OAYV,OATAC,qBACE,WACEhB,IACIY,GACFd,EAAWc,KAGf,CAACZ,EAAaF,EAAYc,IAExBL,EACK,kBAACU,EAAA,EAAD,MAGLN,EACK,kBAACO,EAAA,EAAD,CAAOC,QAASR,IAIvB,yBAAKnC,UAAU,iBACb,4BAAK4C,KAEL,yBAAK5C,UAAU,OACb,yBAAKA,UAAU,4CACb,kBAAC,EAAD,CAAcc,KAAMA,EAAMC,QAASqB,KAGrC,yBAAKpC,UAAU,+BACb,kBAAC,EAAD,CAAiBP,QAASsB,EAASrB,KAAM6C","file":"static/js/3.0147ae94.chunk.js","sourcesContent":["import React from 'react';\n\nimport Team from 'components/Team';\n\nimport { Link } from 'react-router-dom';\n\nimport { ROUTE_EDIT_PLAYDAY } from 'const/Routes';\nimport { TXT_EDIT } from 'const/Vars';\nimport IPlayday from 'types/interface/IPlayday';\n\ninterface IProps {\n  playday: IPlayday | null;\n  auth: boolean;\n}\n\nconst PlaydaysDetails: React.FC<IProps> = ({ playday, auth }) => {\n\n  if (!playday) {\n    return null;\n  }\n\n  const teamList = playday.teams.map((team, idx) => (\n      <div className=\"col-md-4 mt-3 mt-md-0\" key={idx}>\n        <Team\n          players={team}\n          goals={playday.goals[idx]}\n          color={idx}\n          view=\"compact\"\n        />\n      </div>\n    ),\n  );\n\n  const EditLink = () => {\n    return (\n      <Link\n        className=\"btn btn-primary mb-3\"\n        to={`${ROUTE_EDIT_PLAYDAY}${playday._id}`}\n      >\n        {TXT_EDIT}\n      </Link>\n    );\n  };\n\n  const editLink = auth ? <EditLink/> : null;\n\n  return (\n    <div className=\"playdays-details\">\n      <h2 className=\"d-flex\">\n        {playday.name}\n      </h2>\n\n      {editLink}\n\n      <div className=\"row\">\n        {teamList}\n      </div>\n    </div>\n  );\n};\n\nexport default PlaydaysDetails;\n","import React from 'react';\n\nimport cnames from 'classnames';\n\nimport { ROUTE_PLAYDAYS } from 'const/Routes';\nimport { Link } from 'react-router-dom';\n\ninterface IListItem {\n  _id: string;\n  name: string;\n}\n\ninterface IProps {\n  list: IListItem[];\n  current: string;\n}\n\nconst PlaydaysList: React.FC<IProps> = ({ list, current }) => {\n\n  if (!list.length) {\n    return null;\n  }\n\n  const items = list.map(({ _id, name }) => {\n    return (\n      <Link\n        to={`${ROUTE_PLAYDAYS}${_id}`}\n        /* tslint:disable-next-line:max-line-length */\n        className={cnames('list-group-item list-group-item-action', { active: _id === current })}\n        key={_id}\n      >\n        {name}\n      </Link>\n    );\n  });\n\n  return (\n    <ul className=\"list-group\">\n      {items}\n    </ul>\n  );\n};\n\nexport default PlaydaysList;\n","import React, { useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport * as actions from 'store/actions/playday';\nimport { getAuthReselect } from 'store/selectors/auth';\nimport { getPlaydayReselect, getPlaydaysLoadingReselect, getPlaydaysReselect } from 'store/selectors/playday';\nimport { AppState } from 'store/store';\n\nimport Error from 'components/Error';\nimport Spinner from 'components/Spinner';\nimport PlaydaysDetails from './PlaydaysDetails';\nimport PlaydaysList from './PlaydaysList';\n\nimport { TXT_RESULTS } from 'const/Vars';\nimport IPlayday from 'types/interface/IPlayday';\nimport IPlaydayList from 'types/interface/IPlaydayList';\n\ninterface IProps {\n  getPlaydays: () => void;\n  getPlayday: (id: string) => void;\n  list: IPlaydayList[];\n  loading: boolean;\n  error?: string;\n  current: IPlayday | null;\n  match: {\n    params: {\n      id: string | '';\n    },\n  };\n  auth: {\n    isAuth: boolean;\n  };\n}\n\nconst PlaydaysContainer: React.FC<IProps> = (\n  {\n    getPlaydays, getPlayday, list, loading,\n    error, current, match: { params: { id } },\n    auth: { isAuth },\n  },\n) => {\n  useEffect(\n    () => {\n      getPlaydays();\n      if (id) {\n        getPlayday(id);\n      }\n    },\n    [getPlaydays, getPlayday, id]);\n\n  if (loading) {\n    return <Spinner/>;\n  }\n\n  if (error) {\n    return <Error message={error}/>;\n  }\n\n  return (\n    <div className=\"playdays-page\">\n      <h1>{TXT_RESULTS}</h1>\n\n      <div className=\"row\">\n        <div className=\"col-md-3 order-1 order-md-0 mt-4 mt-md-0\">\n          <PlaydaysList list={list} current={id}/>\n        </div>\n\n        <div className=\"col-md-9 order-0 order-md-1\">\n          <PlaydaysDetails playday={current} auth={isAuth}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  auth: getAuthReselect(state),\n  current: getPlaydayReselect(state),\n  list: getPlaydaysReselect(state),\n  loading: getPlaydaysLoadingReselect(state),\n});\n\nconst mapDispatchToProps = {\n  getPlayday: actions.getPlayday,\n  getPlaydays: actions.getPlaydays,\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n)(React.memo(PlaydaysContainer));\n"],"sourceRoot":""}