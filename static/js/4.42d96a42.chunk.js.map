{"version":3,"sources":["components/Pages/Players/Players.tsx","components/Pages/Players/PlayersContainer.tsx"],"names":["React","memo","list","auth","playerList","map","name","image","box","id","_id","handle","damage","className","key","cn","src","alt","width","to","ROUTE_PLAYERS","ROUTE_EDIT_PLAYER","TXT_EDIT","compose","connect","state","getAuthReselect","error","getPlayerErrorReselect","getPlayerListReselect","loading","getPlayerLoadingReselect","getPlayers","actions","isAuth","useEffect","Spinner","Error","message","TXT_PAGE_PLAYERS"],"mappings":"4NA6DeA,MAAMC,MA/Ca,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACnCC,EAAaF,EAAKG,KAAI,YAAoD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,IAAUC,EAAyB,EAA9BC,IAASC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAchE,OACE,yBAAKC,UAAU,gBAAgBC,IAAKL,GAClC,yBAAKI,UAAWE,IAAG,gBAAiB,CAAE,aAAcH,KAClD,yBAAKC,UAAU,aACb,yBAAKA,UAAU,6BACb,yBACEA,UAAU,oCACVG,IAAKT,EACLU,IAAKX,EACLY,MAAM,OAGR,wBAAIL,UAAU,wBACZ,kBAAC,IAAD,CAAMM,GAAE,UAAKC,KAAL,OAAqBT,IAAWL,IAE1C,0BAAMO,UAAU,uCAAuCL,IAGzD,mBA9BW,WACjB,OAAKL,EAKH,yBAAKU,UAAU,mCACb,kBAAC,IAAD,CAAMM,GAAE,UAAKE,KAAL,OAAyBZ,GAAMI,UAAU,mBAAmBS,MAL/D,OA4BH,YAOV,OACE,yBAAKT,UAAU,OACZT,MCMQmB,sBACbC,aARsB,SAACC,GAAD,MAAsB,CAC5CtB,KAAMuB,YAAgBD,GACtBE,MAAOC,YAAuBH,GAC9BvB,KAAM2B,YAAsBJ,GAC5BK,QAASC,YAAyBN,MAIT,CAAEO,WAAYC,MAD1BV,CAEbvB,IAAMC,MAxCmC,SAAC,GAOnC,IALL+B,EAKI,EALJA,WACA9B,EAII,EAJJA,KACA4B,EAGI,EAHJA,QACAH,EAEI,EAFJA,MACQO,EACJ,EADJ/B,KAAQ+B,OASV,OANAC,qBACE,WACEH,MAEF,CAACA,IAECF,EACK,kBAACM,EAAA,EAAD,MAGLT,EACK,kBAACU,EAAA,EAAD,CAAOC,QAASX,IAIvB,yBAAKd,UAAU,gBACb,4BAAK0B,KACL,kBAAC,EAAD,CAASrC,KAAMA,EAAMC,KAAM+B","file":"static/js/4.42d96a42.chunk.js","sourcesContent":["import React from 'react';\n\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { ROUTE_EDIT_PLAYER, ROUTE_PLAYERS } from 'const/Routes';\nimport { TXT_EDIT } from 'const/Vars';\nimport IPlayer from 'types/interface/IPlayer';\n\ninterface IProps {\n  list: IPlayer[];\n  auth?: boolean;\n}\n\nconst Players: React.FC<IProps> = ({ list, auth }) => {\n  const playerList = list.map(({ name, image, box, _id: id, handle, damage }) => {\n\n    const EditButton = () => {\n      if (!auth) {\n        return null;\n      }\n\n      return (\n        <div className=\"card-footer p-0 text-right mt-3\">\n          <Link to={`${ROUTE_EDIT_PLAYER}${id}`} className=\"card-link small\">{TXT_EDIT}</Link>\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"col-sm-3 mb-4\" key={id}>\n        <div className={cn('card bg-light', { 'card-muted': damage })}>\n          <div className=\"card-body\">\n            <div className=\"d-flex align-items-center\">\n              <img\n                className=\"rounded-circle border-dark border\"\n                src={image}\n                alt={name}\n                width=\"40\"\n              />\n\n              <h5 className=\"card-title mb-0 ml-2\">\n                <Link to={`${ROUTE_PLAYERS}${handle}`}>{name}</Link>\n              </h5>\n              <span className=\"badge badge-pill badge-info ml-auto\">{box}</span>\n            </div>\n\n            <EditButton/>\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"row\">\n      {playerList}\n    </div>\n  );\n};\n\nexport default React.memo(Players);\n","import React, { useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport * as actions from 'store/actions/player';\nimport { getAuthReselect } from 'store/selectors/auth';\nimport { getPlayerErrorReselect, getPlayerListReselect, getPlayerLoadingReselect } from 'store/selectors/player';\nimport { AppState } from 'store/store';\n\nimport Error from 'components/Error';\nimport Spinner from 'components/Spinner';\nimport Players from './Players';\n\nimport { TXT_PAGE_PLAYERS } from 'const/Vars';\nimport IPlayer from 'types/interface/IPlayer';\n\ninterface IProps {\n  list: IPlayer[];\n  loading: boolean;\n  error: string;\n  getPlayers: () => void;\n  auth: { isAuth?: boolean };\n}\n\nconst PlayersContainer: React.FC<IProps> = (\n  {\n    getPlayers,\n    list,\n    loading,\n    error,\n    auth: { isAuth },\n  }) => {\n\n  useEffect(\n    () => {\n      getPlayers();\n    },\n    [getPlayers]);\n\n  if (loading) {\n    return <Spinner/>;\n  }\n\n  if (error) {\n    return <Error message={error}/>;\n  }\n\n  return (\n    <div className=\"players-page\">\n      <h1>{TXT_PAGE_PLAYERS}</h1>\n      <Players list={list} auth={isAuth}/>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  auth: getAuthReselect(state),\n  error: getPlayerErrorReselect(state),\n  list: getPlayerListReselect(state),\n  loading: getPlayerLoadingReselect(state),\n});\n\nexport default compose(\n  connect(mapStateToProps, { getPlayers: actions.getPlayers }),\n)(React.memo(PlayersContainer));\n"],"sourceRoot":""}